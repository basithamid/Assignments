package com.hibernate.mapping;

import java.util.HashSet;
import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
       Configuration config = new Configuration();
       config.configure("hibernate.cfg.xml");
       SessionFactory sessionFactory = config.buildSessionFactory();
       //one to one
       //create
//       createCustomer(sessionFactory);
       //read
//       readCustomer(sessionFactory);
       //update
//       update(sessionFactory);
       //remove
//       remove(sessionFactory);
       
       
       //one to many
       //create
       createMarketStock(sessionFactory);
       //read
       readFromMarket(sessionFactory);
       sessionFactory.close();
    }
    
    public static void createMarketStock(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Transaction tx = session.beginTransaction();
    	Market market = new Market("Market", "Pune");
    	Stock s1 = new Stock("ABC", 10000, market);
    	Stock s2 = new Stock("DEF", 20000, market);
    	Stock s3 = new Stock("XYZ", 30000, market);
    	HashSet<Stock> stockSet = new HashSet<Stock>();
    	stockSet.add(s1);stockSet.add(s2);stockSet.add(s3);
    	market.setStock(stockSet);
    	session.persist(market);
    	tx.commit();
    	session.close();
    }
    
    public static void readFromMarket(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Query query = session.createQuery("from Market");
    	List<Market> market = query.list();
    	System.out.println("Market details: " + market);
    	session.close();
    }
    
    public static void createCustomer(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Transaction tx = session.beginTransaction();
    	Address add = new Address("Srinagar","Kashmir");
    	Address add2 = new Address("Bangalore","Karnataka");
    	Customer cust = new Customer("Basit",add);
    	Customer cust2 = new Customer("Anusha",add2);
    	
    	session.persist(cust);
    	session.persist(cust2);
    	tx.commit();
    	
    	session.close();
    }
    
    public static void readCustomer(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Query query = session.createQuery("from Customer");
    	List<Customer> customers = query.list();
    	System.out.println("Customers: " + customers);
    	session.close();
    }
    
    public static void update(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Transaction tx = session.beginTransaction();
    	Customer cust = session.get(Customer.class, 1);
    	cust.getAddress().setState("J & K");
    	tx.commit();
    	session.close();
    }
    public static void remove(SessionFactory sessionFactory){
    	Session session = sessionFactory.openSession();
    	Transaction tx = session.beginTransaction();
//    	Address add = session.get(Address.class, 2);
    	Customer cust = session.get(Customer.class, 1);
    	session.delete(cust);
//    	session.delete(add);
    	tx.commit();
    	session.close();
    }
}
