package com.spring.advertisement.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

//import com.spring.advertisement.collection.ItemCollection;
import com.spring.advertisement.collection.SessionCollection;
import com.spring.advertisement.entity.User;
import com.spring.advertisement.entity.UserLogin;
import com.spring.advertisement.service.UserService;

@RestController
@RequestMapping("/advertisement")
public class UserController {
	
	@Autowired
	UserService userService;
	
	@RequestMapping(value="/user", method=RequestMethod.POST,
			consumes=MediaType.APPLICATION_JSON_VALUE,
			produces=MediaType.APPLICATION_JSON_VALUE)
	public @ResponseBody User createUser(@RequestBody User user) {
		System.out.println("user = " + user);
		return userService.createUser(user);
	}
	
//	@RequestMapping(value="/categories", method=RequestMethod.GET,
//			produces=MediaType.APPLICATION_JSON_VALUE)
//	public @ResponseBody List<ItemCollection> getCategories(){
//		List<ItemCollection> categories = userService.getCategories();
//		System.out.println("Categories : "+categories);
//		return categories;
//	}
//	
//	@RequestMapping(value="/login", method=RequestMethod.POST,
//			produces=MediaType.APPLICATION_JSON_VALUE,
//			consumes=MediaType.APPLICATION_JSON_VALUE)
//	public @ResponseBody SessionCollection login(@RequestBody UserLogin user){
//		
//		return userService.login(user);
//	}
//	
//	@RequestMapping(value="/logout", method=RequestMethod.POST,
//			consumes=MediaType.APPLICATION_JSON_VALUE,
//			produces=MediaType.APPLICATION_JSON_VALUE)
//	public @ResponseBody void logout(@RequestHeader(value="auth-token") String authToken){
//		userService.logout(authToken);
//		
//	}
}
