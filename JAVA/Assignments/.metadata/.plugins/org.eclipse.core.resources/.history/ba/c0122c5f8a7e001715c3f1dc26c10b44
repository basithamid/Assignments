package threading;

class WaterTank implements Runnable{
	Thread inlet,outlet,controller;
	static int level;
	public WaterTank(){
		level = 0;
		inlet = new Thread(this);
		inlet.setName("Inlet");
		inlet.start();
		outlet = new Thread(this);
		outlet.setName("Outlet");
		outlet.start();
		controller = new Thread(this);
		controller.setName("Controller");
		controller.setDaemon(true);
		controller.start();
	}
	public void run(){
		Thread currentThread = Thread.currentThread();
		System.out.println("Hi");
		if(currentThread.getName().equals("Inlet")){
			for(;;){
				level += 50;
				System.out.println("WaterLevel:"+level);
				try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
			
		}
		else if(currentThread.getName().equals("Outlet")){
			for(;;){
				level -= 70;
				System.out.println("WaterLevel:"+level);
				try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		}
		else if(currentThread.getName().equals("Controller")){
			for(;;){
				if(level<800 && level >=0){
					outlet.suspend();
					inlet.resume();
				}
				else if(level > 800 && level <=1000){
					inlet.suspend();
					outlet.resume();
				}
			}
		}
	}
}

public class WaterTankThreading {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		WaterTank waterTank = new WaterTank();

	}

}
